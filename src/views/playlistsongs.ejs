<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta http-equiv='X-UA-Compatible' content='IE=edge'>
    <meta name='viewport' content='width=device-width, initial-scale=1'>

    <title>Play List Songs</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css"/>
    <script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.js"></script>
    

    <link rel="stylesheet" href="/css/menu.css"/>
    <script src="/js/menu.js"></script>

    <style type="text/css">

      .list .content{
        font-size: 20px;
        margin-top: 15px;
        width: 74% !important;
      }

      .list .content .header{
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }

      .list .segment{
        margin: .5rem 0 !important;
      }

      .ui.modal, .ui.modal>.actions {
        background-color: #f2711c87!important;
        text-align: center !important;
      }
      
      
      
    </style>

    <script>
      $(document).ready(function () {
        
        if(localStorage.getItem("playListId") != null){
          let playListId = localStorage.getItem("playListId");
          console.log('playlist id is : ', playListId);
          $('.loading').dimmer('show');
          getSPToken(playListId);

        }

        function getSPToken(playListId) {
          console.log('Getting spotify token!!!');
          let url = 'https://myrn.herokuapp.com/sync?type=spotify';
          //let url = 'http://127.0.0.1:4001/sync?type=spotify';
          let token = JSON.parse(localStorage.getItem("sptoken"));
          let obj = { refresh_token:token.refresh_token, grant_type:'refresh_token', client_id: '03f7870c8b5e433e95b6cab9cdd89d88', client_secret : 'c1758e91ae284c4d9983fc0595023b73', redirect_uri:url};
          //console.log(JSON.stringify(obj));
          $.ajax({
            url: 'https://accounts.spotify.com/api/token',
            method: 'POST',
            data: jQuery.param(obj) ,
            contentType: 'application/x-www-form-urlencoded;',
          }).done(function (data){
            data.created_at = new Date();
            
            if(! data.hasOwnProperty("refresh_token")){ 
              let tkn = JSON.parse(localStorage.getItem("sptoken"));
              data.refresh_token=tkn.refresh_token;
            }

            localStorage.setItem("sptoken", JSON.stringify(data));
            //console.log(JSON.stringify(data));
            getSPPlaylistSongs(playListId);
            
          }).fail(function (xhr, status) {
            console.log(xhr.responseText);
          });
        }

        function getSPPlaylistSongs(id) {
          console.log('Getting spotify playlist songs!!!');
          let tkn = JSON.parse(localStorage.getItem("sptoken"));
          $('.text.loader').html("Getting spotify playlist songs from Spotify app....");
          //console.log(JSON.stringify(obj));
          $.ajax({
            url: 'https://api.spotify.com/v1/playlists/'+id+'/tracks',
            method: 'get',
            headers: { 'Authorization': 'Bearer '+tkn.access_token },
            contentType: 'application/json;',
          }).done(function (data){
            //console.log(JSON.stringify(data));
            console.log('Playlist songs are : ', data.items.length)
            
            data.items.forEach(song => {

              let l = '<a class="item ui raised segment" data="'+song.track.album.id+'">'+
              '<img class="ui tiny image" src="'+song.track.album.images[1].url+'">'+
              '<div class="content">'+
                '<div class="header">'+song.track.album.name+'</div>'+
                '<div class="description"> by '+song.track.album.artists[0].name+'</div>'+
              '</div>'+
              '</a>';

              $('.trackList').append(l);

            });

            $('.loading').dimmer('hide');

        
          }).fail(function (xhr, status) {
            console.log(xhr.responseText);
            $('.loading').dimmer('hide');
          });
        }

      });
    </script>
  </head>
  <body class="pushables">

    <script src="https://sdk.scdn.co/spotify-player.js"></script>
    <script>
      window.onSpotifyWebPlaybackSDKReady = () => {
        
        var player = new Spotify.Player({
          name: 'My run player',
          getOAuthToken: callback => {
            let tkn = JSON.parse(localStorage.getItem("sptoken"));
            callback(tkn.access_token);
          },
          volume: 0.5
        });

        const play = ({
          spotify_uri,
          playerInstance: {
            _options: {
              getOAuthToken,
              id
            }
          }
        }) => {
          getOAuthToken(access_token => {
            
            $.ajax({
              url: `https://api.spotify.com/v1/me/player/play?device_id=${id}`,
              method: 'PUT',
              headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${access_token}`
              },
              body: JSON.stringify({ uris: [spotify_uri] }),
            }).done(function (data){
              console.log(JSON.stringify(data));
            }).fail(function (xhr, status) {
              let error = JSON.parse(xhr.responseText).error;
              //$('.playerErrorModel .content').html(error.message);
              //$('.playerErrorModel').modal('show');
              errorModel('Player having trouble !!', error.message, (type) => {
                console.log(type, ' clicked !!!');
              });
            });

          });
        };

        $(document).on("click", ".trackList a", function(){
          let trackId = $(this).attr('data');
          console.log('Track id is : ', trackId);
          //demo track id 5bimKHx8YBRQBsoph5sODo
          play({
            playerInstance: player,
            spotify_uri: 'spotify:track:'+trackId,
          });
        });

        const errorModel = (title, msg, cb) => {

          if(!$('.playerErrorModel').length){
            //console.log('model added !');
            const t = `<div class="ui basic modal playerErrorModel">
              <div class="ui icon header">
                <i class="play icon"></i>
                <span></span>
              </div>
              <div class="content">
                <span></span>
              </div>
              <div class="actions">
                <div class="ui red cancel button" onclick="$('.dimmer.modals').removeClass('visible active').addClass('hidden');">
                  <i class="remove icon"></i> OK
                </div>
              </div>
            </div>`;

            $('body').append(t);

            $(document).on('click', '.playerErrorModel .cancel', ()=>{cb('cancel')});
          }

          $('.playerErrorModel .header span').html(title);
          $('.playerErrorModel .content span').html(msg);
          $('.playerErrorModel').modal('show');
        }
      };
    </script>

    <%- include('home_header', {title: 'PLAYLIST SONGS', path:'music'}); %>

    <div class="pusher" style="padding: 10px!important;">

      <div class="ui list trackList">
        
      </div>

    </div>

    

    <div class="ui inverted dimmer loading">
      <!-- active -->
      <div class="ui text loader">Loading</div>
    </div>
  
  </body>
</html>
